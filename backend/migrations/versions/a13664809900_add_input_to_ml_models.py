# Copyright 2023 Google Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""Add input and input parameters to ML models.

Revision ID: a13664809900
Revises: 171d6440fc4d
Create Date: 2023-07-20 22:22:01.850120

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'a13664809900'
down_revision = '171d6440fc4d'
branch_labels = None
depends_on = None


def upgrade():
    op.create_table('ml_model_input',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('ml_model_id', sa.Integer(), nullable=False),
    sa.Column('source', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['ml_model_id'], ['ml_models.id'], ),
    sa.PrimaryKeyConstraint('ml_model_id')
    )
    op.create_table('ml_model_input_parameters',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('ml_model_id', sa.Integer(), nullable=False),
    sa.Column('first_party_dataset', sa.String(length=255), nullable=True),
    sa.Column('first_party_table', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['ml_model_id'], ['ml_model_input.ml_model_id'], ),
    sa.PrimaryKeyConstraint('ml_model_id')
    )

    op.execute("""
      INSERT INTO ml_model_input
      (created_at, updated_at, ml_model_id, source)
      SELECT
        created_at,
        updated_at,
        id,
        IF(uses_first_party_data, 'GOOGLE_ANALYTICS_AND_FIRST_PARTY', 'GOOGLE_ANALYTICS')
      FROM ml_models
    """)
    op.execute("""
      INSERT INTO ml_model_input_parameters
      (created_at, updated_at, ml_model_id, first_party_dataset, first_party_table)
      SELECT
        m.created_at,
        m.updated_at,
        m.id,
        d.name,
        'first_party'
      FROM ml_models m
      JOIN ml_model_bigquery_dataset d
      ON m.id = d.ml_model_id
    """)

    with op.batch_alter_table('ml_models', schema=None) as batch_op:
        batch_op.drop_column('uses_first_party_data')


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('ml_models', schema=None) as batch_op:
        batch_op.add_column(sa.Column('uses_first_party_data', mysql.TINYINT(display_width=1), autoincrement=False, nullable=False))

    op.drop_table('ml_model_input_parameters')
    op.drop_table('ml_model_input')
    # ### end Alembic commands ###
